version: '3.8'

services:
  ppc-mongo:
    image: mongo:latest
    container_name: ppc-mongo
    ports:
      - "27017:27017"
    volumes:
      - ppc-data:/data/db
      - ./scripts/init_db.js:/docker-entrypoint-initdb.d/init_db.js:ro
      - ./data/case_data.json:/docker-entrypoint-initdb.d/case_data.json:ro
      - ./data/cpu_data.json:/docker-entrypoint-initdb.d/cpu_data.json:ro
      - ./data/cpu-cooler_data.json:/docker-entrypoint-initdb.d/cpu-cooler_data.json:ro
      - ./data/memory_data.json:/docker-entrypoint-initdb.d/memory_data.json:ro
      - ./data/motherboard_data.json:/docker-entrypoint-initdb.d/motherboard_data.json:ro
      - ./data/power-supply_data.json:/docker-entrypoint-initdb.d/power-supply_data.json:ro
      - ./data/storage-devices_data.json:/docker-entrypoint-initdb.d/storage-devices_data.json:ro
      - ./data/video-card_data.json:/docker-entrypoint-initdb.d/video-card_data.json:ro
    environment:
      - MONGO_INITDB_DATABASE=ppc
    networks:
      - ppc-network
  backend:
    build:
      context: ./backend
    container_name: backend
    image: ppc-backend:latest
    ports:
      - "8080:8080"
    depends_on:
      - ppc-mongo
    networks:
      - ppc-network
  frontend:
    build:
      context: ./frontend
    container_name: frontend
    image: ppc-frontend:latest
    ports:
      - "5173:80"
    depends_on:
      - backend
    networks:
      - ppc-network


#Network Configuration
networks:
  ppc-network:
    driver: bridge

#Volume Configuration
volumes:
  ppc-data:
